---

- hosts: all
  remote_user: root
  gather_facts: no
  vars:
    docker_version: 'docker-engine-1.11.2'

  tasks:
    - name: required packages
      yum:
        name: '{{ item }}'
        state: installed
        update_cache: yes
      with_items:
        - tar
        - xz
        - unzip
        - curl
        - ipset

    - name: Docker Repo
      get_url:
        url: 'https://docs.docker.com/engine/installation/linux/repo_files/centos/docker.repo'
        dest: '/etc/yum.repos.d/docker.repo'
        mode: 0644

    - name: Install Docker
      yum:
        name: '{{ docker_version }}'
        state: installed
        update_cache: yes

    - name: Check docker thinpool
      command: '/usr/sbin/vgs docker'
      register: vgs_docker
      ignore_errors: yes

    - block:
      - name: docker volume group
        lvg:
          vg: docker
          pvs: /dev/sdb
      # lvcreate --wipesignatures y -n thinpool docker -l 95%VG
      - name: docker lvs thinpool
        lvol:
          lv: thinpool
          vg: docker
          size: '95%VG'
          opts: '--wipesignatures y'

      #lvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG    
      - name: docker lvs thinpoolmeta
        lvol:
          lv: thinpoolmeta
          vg: docker
          size: '1%VG'
          opts: '--wipesignatures y'

      - name: make lv thin
        command: '/usr/sbin/lvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta'

      - name: docker-thinpool profile
        copy:
          src: files/docker-thinpool.profile
          dest: /etc/lvm/profile/docker-thinpool.profile
          owner: root
          group: root
          mode: 0444

      - name: Apply lvm profile to thin pool
        command: '/usr/sbin/lvchange --metadataprofile docker-thinpool docker/thinpool'

      - name: Enable lv monitoring
        command: '/usr/sbin/lvs -o+seg_monitor'
    
      when: vgs_docker.rc != 0

    - name: docker systemd conf directory
      file: 
        path: /etc/systemd/system/docker.service.d
        state: directory 
        owner: root 
        group: root
        mode: 0755
    - name: docker systemd configuration
      copy:
        src: files/docker.conf
        dest: /etc/systemd/system/docker.service.d/docker.conf
        owner: root
        group: root
        mode: 0644
    - name: reload systemd docker service
      command: '/usr/bin/systemctl daemon-reload'

    - name: Docker Service
      service: 
        name: docker
        enabled: yes
        state: started

- hosts: master:agent
  remote_user: root
  gather_facts: no
  
  tasks:
    - name: authorized ssh_keys
      authorized_key:
        user: root
        state: present
        manage_dir: no
        key: '{{ item }}'
      with_file:
        - 'files/id_rsa.pub'
    - name: nogroup group
      group:
        name: nogroup
        state: present
        gid: 1000

- hosts: boot
  remote_user: root
  gather_facts: no

  tasks:
    - name: Create genconf directory
      file: 
        path: /root/genconf 
        state: directory 
        owner: root 
        group: root
        mode: 0755  
    - name: ssh private key
      copy:
        src: files/id_rsa
        dest: /root/genconf/ssh_key
        owner: root
        group: root
        mode: 0600
    - name: DC/OS config.yml
      copy:
        src: files/config.yaml
        dest: /root/genconf/config.yaml
        owner: root
        group: root
        mode: 0644
    - name: ip-detect script
      copy:
        src: files/ip-detect
        dest: /root/genconf/ip-detect
        owner: root
        group: root
        mode: 0544        
    - name: Setup file
      get_url:
        url: 'https://downloads.dcos.io/dcos/stable/dcos_generate_config.sh?_ga=1.44967972.126818165.1487270716'
        dest: '/root/dcos_generate_config.sh'
        mode: 0500
    - name: genconf
      shell: /root/dcos_generate_config.sh --genconf >> dcos_config.log
      args:
        executable: /bin/bash
        chdir: /root


